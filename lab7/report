Lab7 Report

[练习一] 理解内核级信号量的实现和基于内核级信号量的哲学家就餐问题
semaphore中value表示当前剩余资源数，waitqueue表示等待队列。

down函数：申请资源。如果value大于0，那么可以直接获得并返回。 否则要阻塞当前进程：将当前线程加入到等待队列中，让其睡眠，并用schedule调度其他的线程。

up函数：释放资源。如果等待队列为空，那么直接让value自增即可。 否则选择一个等待队列中的线程并唤醒它。

[练习二] 完成内核级条件变量和基于内核级条件变量的哲学家就餐问题
条件变量中：value表示有多少线程在等待，waitqueue表示等待队列。
管程中：mutex表示进入管程的信号量，条件变量数组表示管程里面管理的条件，next信号量表示等待使用管程的线程，nextcount表示等待使用管程的线程数。

线程使用cond_signal时，表示此时该条件成立，可以唤醒等待该条件的线程。此时优先让等待条件的线程运行， 故把当前线程放入等待队列，唤醒相应线程，并重新调度。

线程使用cond_wait时，表示此时需要等待条件，那么可以先让出管程的控制权，唤醒等待管程的线程，或者释放管程的锁，然后等待条件，进入睡眠。醒来之后直接退出，表示此时满足条件，可以继续。

哲学家就餐问题中，申请叉子时，如果发现条件（条件为本人相邻的人都不在吃）不能满足，那么进入等待。释放叉子时，首先把自己的状态设置为不在吃，然后试图唤醒相邻的人。
在进入之前需要获得管程的互斥锁，退出时需要唤醒等待管程的线程，或者释放互斥锁。
